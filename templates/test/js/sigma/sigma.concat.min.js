
var sigma={};sigma.tools={};sigma.classes={};sigma.instances={};(function(){if(!Array.prototype.some){Array.prototype.some=function(fun){var len=this.length;if(typeof fun!='function'){throw new TypeError();}
var thisp=arguments[1];for(var i=0;i<len;i++){if(i in this&&fun.call(thisp,this[i],i,this)){return true;}}
return false;};}
if(!Array.prototype.forEach){Array.prototype.forEach=function(fun){var len=this.length;if(typeof fun!='function'){throw new TypeError();}
var thisp=arguments[1];for(var i=0;i<len;i++){if(i in this){fun.call(thisp,this[i],i,this);}}};}
if(!Array.prototype.map){Array.prototype.map=function(fun){var len=this.length;if(typeof fun!='function'){throw new TypeError();}
var res=new Array(len);var thisp=arguments[1];for(var i=0;i<len;i++){if(i in this){res[i]=fun.call(thisp,this[i],i,this);}}
return res;};}
if(!Array.prototype.filter){Array.prototype.filter=function(fun){var len=this.length;if(typeof fun!='function')
throw new TypeError();var res=new Array();var thisp=arguments[1];for(var i=0;i<len;i++){if(i in this){var val=this[i];if(fun.call(thisp,val,i,this)){res.push(val);}}}
return res;};}
if(!Object.keys){Object.keys=(function(){var hasOwnProperty=Object.prototype.hasOwnProperty,hasDontEnumBug=!({toString:null}).propertyIsEnumerable('toString'),dontEnums=['toString','toLocaleString','valueOf','hasOwnProperty','isPrototypeOf','propertyIsEnumerable','constructor'],dontEnumsLength=dontEnums.length;return function(obj){if(typeof obj!=='object'&&typeof obj!=='function'||obj===null){throw new TypeError('Object.keys called on non-object');}
var result=[];for(var prop in obj){if(hasOwnProperty.call(obj,prop))result.push(prop);}
if(hasDontEnumBug){for(var i=0;i<dontEnumsLength;i++){if(hasOwnProperty.call(obj,dontEnums[i])){result.push(dontEnums[i]);}}}
return result;}})();}})();sigma.classes.Cascade=function(){this.p={};this.config=function(a1,a2){if(typeof a1=='string'&&a2==undefined){return this.p[a1];}else{var o=(typeof a1=='object'&&a2==undefined)?a1:{};if(typeof a1=='string'){o[a1]=a2;}
for(var k in o){if(this.p[k]!=undefined){this.p[k]=o[k];}}
return this;}};};sigma.classes.EventDispatcher=function(){var _h={};var _self=this;function one(events,handler){if(!handler||!events){return _self;}
var eArray=((typeof events)=='string')?events.split(' '):events;eArray.forEach(function(event){if(!_h[event]){_h[event]=[];}
_h[event].push({'h':handler,'one':true});});return _self;}
function bind(events,handler){if(!handler||!events){return _self;}
var eArray=((typeof events)=='string')?events.split(' '):events;eArray.forEach(function(event){if(!_h[event]){_h[event]=[];}
_h[event].push({'h':handler,'one':false});});return _self;}
function unbind(events,handler){if(!events){_h={};}
var eArray=typeof events=='string'?events.split(' '):events;if(handler){eArray.forEach(function(event){if(_h[event]){_h[event]=_h[event].filter(function(e){return e['h']!=handler;});}
if(_h[event]&&_h[event].length==0){delete _h[event];}});}else{eArray.forEach(function(event){delete _h[event];});}
return _self;}
function dispatch(type,content){if(_h[type]){_h[type].forEach(function(e){e['h']({'type':type,'content':content,'target':_self});});_h[type]=_h[type].filter(function(e){return!e['one'];});}
return _self;}
this.one=one;this.bind=bind;this.unbind=unbind;this.dispatch=dispatch;};(function(){var id=0;var local={};local.plugins=[];sigma.init=function(dom){var inst=new Sigma(dom,(++id).toString());sigma.instances[id]=new SigmaPublic(inst);return sigma.instances[id];};function Graph(){sigma.classes.Cascade.call(this);sigma.classes.EventDispatcher.call(this);var self=this;this.p={minNodeSize:0,maxNodeSize:0,minEdgeSize:0,maxEdgeSize:0,scalingMode:'inside',nodesPowRatio:0.5,edgesPowRatio:0};this.borders={};function addNode(id,params){if(self.nodesIndex[id]){throw new Error('Node "'+id+'" already exists.');}
params=params||{};var n={'x':0,'y':0,'size':1,'degree':0,'inDegree':0,'outDegree':0,'fixed':false,'active':false,'hidden':false,'forceLabel':false,'label':id.toString(),'id':id.toString(),'attr':{}};for(var k in params){switch(k){case'id':break;case'x':case'y':case'size':n[k]=+params[k];break;case'fixed':case'active':case'hidden':case'forceLabel':n[k]=!!params[k];break;case'color':case'label':n[k]=params[k];break;default:n['attr'][k]=params[k];}}
self.nodes.push(n);self.nodesIndex[id.toString()]=n;return self;};function cloneNode(node){return{'x':node['x'],'y':node['y'],'size':node['size'],'degree':node['degree'],'inDegree':node['inDegree'],'outDegree':node['outDegree'],'displayX':node['displayX'],'displayY':node['displayY'],'displaySize':node['displaySize'],'label':node['label'],'id':node['id'],'color':node['color'],'fixed':node['fixed'],'active':node['active'],'hidden':node['hidden'],'forceLabel':node['forceLabel'],'attr':node['attr']};};function checkNode(node,copy){for(var k in copy){switch(k){case'id':case'attr':case'degree':case'inDegree':case'outDegree':case'displayX':case'displayY':case'displaySize':break;case'x':case'y':case'size':node[k]=+copy[k];break;case'fixed':case'active':case'hidden':case'forceLabel':node[k]=!!copy[k];break;case'color':case'label':node[k]=(copy[k]||'').toString();break;default:node['attr'][k]=copy[k];}}
return self;};function dropNode(v){var a=(v instanceof Array?v:[v])||[];var nodesIdsToRemove={};a.forEach(function(id){if(self.nodesIndex[id]){nodesIdsToRemove[id]=true;}else{sigma.log('Node "'+id+'" does not exist.');}});var indexesToRemove=[];self.nodes.forEach(function(n,i){if(n['id']in nodesIdsToRemove){indexesToRemove.unshift(i);if(n['degree']==0){delete nodesIdsToRemove[n['id']];}}});indexesToRemove.forEach(function(index){self.nodes.splice(index,1);});self.edges=self.edges.filter(function(e){if(e['source']['id']in nodesIdsToRemove){delete self.edgesIndex[e['id']];e['target']['degree']--;e['target']['inDegree']--;return false;}else if(e['target']['id']in nodesIdsToRemove){delete self.edgesIndex[e['id']];e['source']['degree']--;e['source']['outDegree']--;return false;}
return true;});return self;};function addEdge(id,source,target,params){if(self.edgesIndex[id]){throw new Error('Edge "'+id+'" already exists.');}
if(!self.nodesIndex[source]){var s='Edge\'s source "'+source+'" does not exist yet.';throw new Error(s);}
if(!self.nodesIndex[target]){var s='Edge\'s target "'+target+'" does not exist yet.';throw new Error(s);}
params=params||{};var e={'source':self.nodesIndex[source],'target':self.nodesIndex[target],'size':1,'weight':1,'displaySize':0.5,'label':id.toString(),'id':id.toString(),'hidden':false,'attr':{}};e['source']['degree']++;e['source']['outDegree']++;e['target']['degree']++;e['target']['inDegree']++;for(var k in params){switch(k){case'id':case'source':case'target':break;case'hidden':e[k]=!!params[k];break;case'size':case'weight':e[k]=+params[k];break;case'color':e[k]=params[k].toString();break;case'type':e[k]=params[k].toString();break;case'label':e[k]=params[k];break;default:e['attr'][k]=params[k];}}
self.edges.push(e);self.edgesIndex[id.toString()]=e;return self;};function cloneEdge(edge){return{'source':edge['source']['id'],'target':edge['target']['id'],'size':edge['size'],'type':edge['type'],'weight':edge['weight'],'displaySize':edge['displaySize'],'label':edge['label'],'hidden':edge['hidden'],'id':edge['id'],'attr':edge['attr'],'color':edge['color']};};function checkEdge(edge,copy){for(var k in copy){switch(k){case'id':case'displaySize':break;case'weight':case'size':edge[k]=+copy[k];break;case'source':case'target':edge[k]=self.nodesIndex[k]||edge[k];break;case'hidden':edge[k]=!!copy[k];break;case'color':case'label':case'type':edge[k]=(copy[k]||'').toString();break;default:edge['attr'][k]=copy[k];}}
return self;};function dropEdge(v){var a=(v instanceof Array?v:[v])||[];a.forEach(function(id){if(self.edgesIndex[id]){self.edgesIndex[id]['source']['degree']--;self.edgesIndex[id]['source']['outDegree']--;self.edgesIndex[id]['target']['degree']--;self.edgesIndex[id]['target']['inDegree']--;var index=null;self.edges.some(function(n,i){if(n['id']==id){index=i;return true;}
return false;});index!=null&&self.edges.splice(index,1);delete self.edgesIndex[id];}else{sigma.log('Edge "'+id+'" does not exist.');}});return self;};function empty(){self.nodes=[];self.nodesIndex={};self.edges=[];self.edgesIndex={};return self;};function rescale(w,h,parseNodes,parseEdges){var weightMax=0,sizeMax=0;parseNodes&&self.nodes.forEach(function(node){sizeMax=Math.max(node['size'],sizeMax);});parseEdges&&self.edges.forEach(function(edge){weightMax=Math.max(edge['size'],weightMax);});sizeMax=sizeMax||1;weightMax=weightMax||1;var xMin,xMax,yMin,yMax;parseNodes&&self.nodes.forEach(function(node){xMax=Math.max(node['x'],xMax||node['x']);xMin=Math.min(node['x'],xMin||node['x']);yMax=Math.max(node['y'],yMax||node['y']);yMin=Math.min(node['y'],yMin||node['y']);});var scale=self.p.scalingMode=='outside'?Math.max(w/Math.max(xMax-xMin,1),h/Math.max(yMax-yMin,1)):Math.min(w/Math.max(xMax-xMin,1),h/Math.max(yMax-yMin,1));var margin=(self.p.maxNodeSize||sizeMax)/scale;xMax+=margin;xMin-=margin;yMax+=margin;yMin-=margin;scale=self.p.scalingMode=='outside'?Math.max(w/Math.max(xMax-xMin,1),h/Math.max(yMax-yMin,1)):Math.min(w/Math.max(xMax-xMin,1),h/Math.max(yMax-yMin,1));var a,b;if(!self.p.maxNodeSize&&!self.p.minNodeSize){a=1;b=0;}else if(self.p.maxNodeSize==self.p.minNodeSize){a=0;b=self.p.maxNodeSize;}else{a=(self.p.maxNodeSize-self.p.minNodeSize)/sizeMax;b=self.p.minNodeSize;}
var c,d;if(!self.p.maxEdgeSize&&!self.p.minEdgeSize){c=1;d=0;}else if(self.p.maxEdgeSize==self.p.minEdgeSize){c=0;d=self.p.minEdgeSize;}else{c=(self.p.maxEdgeSize-self.p.minEdgeSize)/weightMax;d=self.p.minEdgeSize;}
parseNodes&&self.nodes.forEach(function(node){node['displaySize']=node['size']*a+b;if(!node['fixed']){node['displayX']=(node['x']-(xMax+xMin)/2)*scale+w/2;node['displayY']=(node['y']-(yMax+yMin)/2)*scale+h/2;}});parseEdges&&self.edges.forEach(function(edge){edge['displaySize']=edge['size']*c+d;});return self;};function translate(sceneX,sceneY,ratio,parseNodes,parseEdges){var sizeRatio=Math.pow(ratio,self.p.nodesPowRatio);parseNodes&&self.nodes.forEach(function(node){if(!node['fixed']){node['displayX']=node['displayX']*ratio+sceneX;node['displayY']=node['displayY']*ratio+sceneY;}
node['displaySize']=node['displaySize']*sizeRatio;});sizeRatio=Math.pow(ratio,self.p.edgesPowRatio);parseEdges&&self.edges.forEach(function(edge){edge['displaySize']=edge['displaySize']*sizeRatio;});return self;};function setBorders(){self.borders={};self.nodes.forEach(function(node){self.borders.minX=Math.min(self.borders.minX==undefined?node['displayX']-node['displaySize']:self.borders.minX,node['displayX']-node['displaySize']);self.borders.maxX=Math.max(self.borders.maxX==undefined?node['displayX']+node['displaySize']:self.borders.maxX,node['displayX']+node['displaySize']);self.borders.minY=Math.min(self.borders.minY==undefined?node['displayY']-node['displaySize']:self.borders.minY,node['displayY']-node['displaySize']);self.borders.maxY=Math.max(self.borders.maxY==undefined?node['displayY']-node['displaySize']:self.borders.maxY,node['displayY']-node['displaySize']);});}
function checkHover(mX,mY){var dX,dY,s,over=[],out=[];self.nodes.forEach(function(node){if(node['hidden']){node['hover']=false;return;}
dX=Math.abs(node['displayX']-mX);dY=Math.abs(node['displayY']-mY);s=node['displaySize'];var oldH=node['hover'];var newH=dX<s&&dY<s&&Math.sqrt(dX*dX+dY*dY)<s;if(oldH&&!newH){node['hover']=false;out.push(node.id);}else if(newH&&!oldH){node['hover']=true;over.push(node.id);}});over.length&&self.dispatch('overnodes',over);out.length&&self.dispatch('outnodes',out);return self;};function iterNodes(fun,ids){var a=ids?ids.map(function(id){return self.nodesIndex[id];}):self.nodes;var aCopies=a.map(cloneNode);aCopies.forEach(fun);a.forEach(function(n,i){checkNode(n,aCopies[i]);});return self;};function iterEdges(fun,ids){var a=ids?ids.map(function(id){return self.edgesIndex[id];}):self.edges;var aCopies=a.map(cloneEdge);aCopies.forEach(fun);a.forEach(function(e,i){checkEdge(e,aCopies[i]);});return self;};function getNodes(ids){var a=((ids instanceof Array?ids:[ids])||[]).map(function(id){return cloneNode(self.nodesIndex[id]);});return(ids instanceof Array?a:a[0]);};function getEdges(ids){var a=((ids instanceof Array?ids:[ids])||[]).map(function(id){return cloneEdge(self.edgesIndex[id]);});return(ids instanceof Array?a:a[0]);};empty();this.addNode=addNode;this.addEdge=addEdge;this.dropNode=dropNode;this.dropEdge=dropEdge;this.iterEdges=iterEdges;this.iterNodes=iterNodes;this.getEdges=getEdges;this.getNodes=getNodes;this.empty=empty;this.rescale=rescale;this.translate=translate;this.setBorders=setBorders;this.checkHover=checkHover;}
function Monitor(instance,dom){sigma.classes.Cascade.call(this);var self=this;this.instance=instance;this.monitoring=false;this.p={fps:40,dom:dom,globalProbes:{'Time (ms)':sigma.chronos.getExecutionTime,'Queue':sigma.chronos.getQueuedTasksCount,'Tasks':sigma.chronos.getTasksCount,'FPS':sigma.chronos.getFPS},localProbes:{'Nodes count':function(){return self.instance.graph.nodes.length;},'Edges count':function(){return self.instance.graph.edges.length;}}};function activate(){if(!self.monitoring){self.monitoring=window.setInterval(routine,1000/self.p.fps);}
return self;}
function desactivate(){if(self.monitoring){window.clearInterval(self.monitoring);self.monitoring=null;self.p.dom.innerHTML='';}
return self;}
function routine(){var s='';s+='<p>GLOBAL :</p>';for(var k in self.p.globalProbes){s+='<p>'+k+' : '+self.p.globalProbes[k]()+'</p>';}
s+='<br><p>LOCAL :</p>';for(var k in self.p.localProbes){s+='<p>'+k+' : '+self.p.localProbes[k]()+'</p>';}
self.p.dom.innerHTML=s;return self;}
this.activate=activate;this.desactivate=desactivate;}
function MouseCaptor(dom){sigma.classes.Cascade.call(this);sigma.classes.EventDispatcher.call(this);var self=this;var dom=dom;this.p={minRatio:1,maxRatio:32,marginRatio:1,zoomDelta:0.1,dragDelta:0.3,zoomMultiply:2,directZooming:false,blockScroll:true,inertia:1.1,mouseEnabled:true};var oldMouseX=0;var oldMouseY=0;var startX=0;var startY=0;var oldStageX=0;var oldStageY=0;var oldRatio=1;var targetRatio=1;var targetStageX=0;var targetStageY=0;var lastStageX=0;var lastStageX2=0;var lastStageY=0;var lastStageY2=0;var progress=0;var isZooming=false;this.stageX=0;this.stageY=0;this.ratio=1;this.mouseX=0;this.mouseY=0;this.isMouseDown=false;function getX(e){return e.offsetX!=undefined&&e.offsetX||e.layerX!=undefined&&e.layerX||e.clientX!=undefined&&e.clientX;};function getY(e){return e.offsetY!=undefined&&e.offsetY||e.layerY!=undefined&&e.layerY||e.clientY!=undefined&&e.clientY;};function getDelta(e){return e.wheelDelta!=undefined&&e.wheelDelta||e.detail!=undefined&&-e.detail;};function moveHandler(event){oldMouseX=self.mouseX;oldMouseY=self.mouseY;self.mouseX=getX(event);self.mouseY=getY(event);self.isMouseDown&&drag(event);self.dispatch('move');if(event.preventDefault){event.preventDefault();}else{event.returnValue=false;}};function upHandler(event){if(self.p.mouseEnabled&&self.isMouseDown){self.isMouseDown=false;self.dispatch('mouseup');stopDrag();if(event.preventDefault){event.preventDefault();}else{event.returnValue=false;}}};function downHandler(event){if(self.p.mouseEnabled){self.isMouseDown=true;oldMouseX=self.mouseX;oldMouseY=self.mouseY;self.dispatch('mousedown');startDrag();if(event.preventDefault){event.preventDefault();}else{event.returnValue=false;}}};function wheelHandler(event){if(self.p.mouseEnabled){startInterpolate(self.mouseX,self.mouseY,self.ratio*(getDelta(event)>0?self.p.zoomMultiply:1/self.p.zoomMultiply));if(self.p['blockScroll']){if(event.preventDefault){event.preventDefault();}else{event.returnValue=false;}}}};function startDrag(){oldStageX=self.stageX;oldStageY=self.stageY;startX=self.mouseX;startY=self.mouseY;lastStageX=self.stageX;lastStageX2=self.stageX;lastStageY=self.stageY;lastStageY2=self.stageY;self.dispatch('startdrag');};function stopDrag(){if(oldStageX!=self.stageX||oldStageY!=self.stageY){startInterpolate(self.stageX+self.p.inertia*(self.stageX-lastStageX2),self.stageY+self.p.inertia*(self.stageY-lastStageY2));}};function drag(){var newStageX=self.mouseX-startX+oldStageX;var newStageY=self.mouseY-startY+oldStageY;if(newStageX!=self.stageX||newStageY!=self.stageY){lastStageX2=lastStageX;lastStageY2=lastStageY;lastStageX=newStageX;lastStageY=newStageY;self.stageX=newStageX;self.stageY=newStageY;self.dispatch('drag');}};function startInterpolate(x,y,ratio){if(self.isMouseDown){return;}
window.clearInterval(self.interpolationID);isZooming=ratio!=undefined;oldStageX=self.stageX;targetStageX=x;oldStageY=self.stageY;targetStageY=y;oldRatio=self.ratio;targetRatio=ratio||self.ratio;targetRatio=Math.min(Math.max(targetRatio,self.p.minRatio),self.p.maxRatio);progress=self.p.directZooming?1-(isZooming?self.p.zoomDelta:self.p.dragDelta):0;if(self.ratio!=targetRatio||self.stageX!=targetStageX||self.stageY!=targetStageY){interpolate();self.interpolationID=window.setInterval(interpolate,50);self.dispatch('startinterpolate');}};function stopInterpolate(){var oldRatio=self.ratio;if(isZooming){self.ratio=targetRatio;self.stageX=targetStageX+
(self.stageX-targetStageX)*self.ratio/oldRatio;self.stageY=targetStageY+
(self.stageY-targetStageY)*self.ratio/oldRatio;}else{self.stageX=targetStageX;self.stageY=targetStageY;}
self.dispatch('stopinterpolate');};function interpolate(){progress+=(isZooming?self.p.zoomDelta:self.p.dragDelta);progress=Math.min(progress,1);var k=sigma.easing.quadratic.easeout(progress);var oldRatio=self.ratio;self.ratio=oldRatio*(1-k)+targetRatio*k;if(isZooming){self.stageX=targetStageX+
(self.stageX-targetStageX)*self.ratio/oldRatio;self.stageY=targetStageY+
(self.stageY-targetStageY)*self.ratio/oldRatio;}else{self.stageX=oldStageX*(1-k)+targetStageX*k;self.stageY=oldStageY*(1-k)+targetStageY*k;}
self.dispatch('interpolate');if(progress>=1){window.clearInterval(self.interpolationID);stopInterpolate();}};function checkBorders(b,width,height){return self;};dom.addEventListener('DOMMouseScroll',wheelHandler,true);dom.addEventListener('mousewheel',wheelHandler,true);dom.addEventListener('mousemove',moveHandler,true);dom.addEventListener('mousedown',downHandler,true);document.addEventListener('mouseup',upHandler,true);this.checkBorders=checkBorders;this.interpolate=startInterpolate;}
function Plotter(nodesCtx,edgesCtx,labelsCtx,hoverCtx,graph,w,h){sigma.classes.Cascade.call(this);var self=this;this.p={labelColor:'default',defaultLabelColor:'#000',labelHoverBGColor:'default',defaultHoverLabelBGColor:'#fff',labelHoverShadow:true,labelHoverShadowColor:'#000',labelHoverColor:'default',defaultLabelHoverColor:'#000',labelActiveBGColor:'default',defaultActiveLabelBGColor:'#fff',labelActiveShadow:true,labelActiveShadowColor:'#000',labelActiveColor:'default',defaultLabelActiveColor:'#000',labelSize:'fixed',defaultLabelSize:16,labelSizeRatio:2,labelThreshold:6,font:'Sans-Serif',hoverFont:'',activeFont:'',fontStyle:'',hoverFontStyle:'',activeFontStyle:'',edgeColor:'source',defaultEdgeColor:'#aaa',defaultEdgeType:'line',defaultNodeColor:'#aaa',nodeHoverColor:'node',defaultNodeHoverColor:'#fff',nodeActiveColor:'node',defaultNodeActiveColor:'#fff',borderSize:0,nodeBorderColor:'node',defaultNodeBorderColor:'#fff',edgesSpeed:200,nodesSpeed:200,labelsSpeed:200};var nodesCtx=nodesCtx;var edgesCtx=edgesCtx;var labelsCtx=labelsCtx;var hoverCtx=hoverCtx;var graph=graph;var width=w;var height=h;this.currentEdgeIndex=0;this.currentNodeIndex=0;this.currentLabelIndex=0;function task_drawEdge(){var c=graph.edges.length;var s,t,i=0;while(i++<self.p.edgesSpeed&&self.currentEdgeIndex<c){e=graph.edges[self.currentEdgeIndex];s=e['source'];t=e['target'];if(e['hidden']||s['hidden']||t['hidden']||(!self.isOnScreen(s)&&!self.isOnScreen(t))){self.currentEdgeIndex++;}else{drawEdge(graph.edges[self.currentEdgeIndex++]);}}
return self.currentEdgeIndex<c;};function task_drawNode(){var c=graph.nodes.length;var i=0;while(i++<self.p.nodesSpeed&&self.currentNodeIndex<c){if(!self.isOnScreen(graph.nodes[self.currentNodeIndex])){self.currentNodeIndex++;}else{drawNode(graph.nodes[self.currentNodeIndex++]);}}
return self.currentNodeIndex<c;};function task_drawLabel(){var c=graph.nodes.length;var i=0;while(i++<self.p.labelsSpeed&&self.currentLabelIndex<c){if(!self.isOnScreen(graph.nodes[self.currentLabelIndex])){self.currentLabelIndex++;}else{drawLabel(graph.nodes[self.currentLabelIndex++]);}}
return self.currentLabelIndex<c;};function drawNode(node){var size=Math.round(node['displaySize']*10)/10;var ctx=nodesCtx;ctx.fillStyle=node['color'];ctx.beginPath();ctx.arc(node['displayX'],node['displayY'],size,0,Math.PI*2,true);ctx.closePath();ctx.fill();node['hover']&&drawHoverNode(node);return self;};function drawEdge(edge){var x1=edge['source']['displayX'];var y1=edge['source']['displayY'];var x2=edge['target']['displayX'];var y2=edge['target']['displayY'];var color=edge['color'];if(!color){switch(self.p.edgeColor){case'source':color=edge['source']['color']||self.p.defaultNodeColor;break;case'target':color=edge['target']['color']||self.p.defaultNodeColor;break;default:color=self.p.defaultEdgeColor;break;}}
var ctx=edgesCtx;switch(edge['type']||self.p.defaultEdgeType){case'curve':ctx.strokeStyle=color;ctx.lineWidth=edge['displaySize']/3;ctx.beginPath();ctx.moveTo(x1,y1);ctx.quadraticCurveTo((x1+x2)/2+(y2-y1)/4,(y1+y2)/2+(x1-x2)/4,x2,y2);ctx.stroke();break;case'line':default:ctx.strokeStyle=color;ctx.lineWidth=edge['displaySize']/3;ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.stroke();break;}
return self;};function drawLabel(node){var ctx=labelsCtx;if(node['displaySize']>=self.p.labelThreshold||node['forceLabel']){var fontSize=self.p.labelSize=='fixed'?self.p.defaultLabelSize:self.p.labelSizeRatio*node['displaySize'];ctx.font=self.p.fontStyle+fontSize+'px '+self.p.font;ctx.fillStyle=self.p.labelColor=='node'?(node['color']||self.p.defaultNodeColor):self.p.defaultLabelColor;ctx.fillText(node['label'],Math.round(node['displayX']+node['displaySize']*1.1),Math.round(node['displayY']+fontSize/2-3));}
return self;};function drawHoverNode(node){var ctx=hoverCtx;var fontSize=self.p.labelSize=='fixed'?self.p.defaultLabelSize:self.p.labelSizeRatio*node['displaySize'];ctx.font=(self.p.hoverFontStyle||self.p.fontStyle||'')+' '+
fontSize+'px '+
(self.p.hoverFont||self.p.font||'');ctx.fillStyle=self.p.labelHoverBGColor=='node'?(node['color']||self.p.defaultNodeColor):self.p.defaultHoverLabelBGColor;ctx.beginPath();if(self.p.labelHoverShadow){ctx.shadowOffsetX=0;ctx.shadowOffsetY=0;ctx.shadowBlur=4;ctx.shadowColor=self.p.labelHoverShadowColor;}
sigma.tools.drawRoundRect(ctx,Math.round(node['displayX']-fontSize/2-2),Math.round(node['displayY']-fontSize/2-2),Math.round(ctx.measureText(node['label']).width+
node['displaySize']*1.5+
fontSize/2+4),Math.round(fontSize+4),Math.round(fontSize/2+2),'left');ctx.closePath();ctx.fill();ctx.shadowOffsetX=0;ctx.shadowOffsetY=0;ctx.shadowBlur=0;ctx.beginPath();ctx.fillStyle=self.p.nodeBorderColor=='node'?(node['color']||self.p.defaultNodeColor):self.p.defaultNodeBorderColor;ctx.arc(Math.round(node['displayX']),Math.round(node['displayY']),node['displaySize']+self.p.borderSize,0,Math.PI*2,true);ctx.closePath();ctx.fill();ctx.beginPath();ctx.fillStyle=self.p.nodeHoverColor=='node'?(node['color']||self.p.defaultNodeColor):self.p.defaultNodeHoverColor;ctx.arc(Math.round(node['displayX']),Math.round(node['displayY']),node['displaySize'],0,Math.PI*2,true);ctx.closePath();ctx.fill();ctx.fillStyle=self.p.labelHoverColor=='node'?(node['color']||self.p.defaultNodeColor):self.p.defaultLabelHoverColor;ctx.fillText(node['label'],Math.round(node['displayX']+node['displaySize']*1.5),Math.round(node['displayY']+fontSize/2-3));return self;};function drawActiveNode(node){var ctx=hoverCtx;if(!isOnScreen(node)){return self;}
var fontSize=self.p.labelSize=='fixed'?self.p.defaultLabelSize:self.p.labelSizeRatio*node['displaySize'];ctx.font=(self.p.activeFontStyle||self.p.fontStyle||'')+' '+
fontSize+'px '+
(self.p.activeFont||self.p.font||'');ctx.fillStyle=self.p.labelHoverBGColor=='node'?(node['color']||self.p.defaultNodeColor):self.p.defaultActiveLabelBGColor;ctx.beginPath();if(self.p.labelActiveShadow){ctx.shadowOffsetX=0;ctx.shadowOffsetY=0;ctx.shadowBlur=4;ctx.shadowColor=self.p.labelActiveShadowColor;}
sigma.tools.drawRoundRect(ctx,Math.round(node['displayX']-fontSize/2-2),Math.round(node['displayY']-fontSize/2-2),Math.round(ctx.measureText(node['label']).width+
node['displaySize']*1.5+
fontSize/2+4),Math.round(fontSize+4),Math.round(fontSize/2+2),'left');ctx.closePath();ctx.fill();ctx.shadowOffsetX=0;ctx.shadowOffsetY=0;ctx.shadowBlur=0;ctx.beginPath();ctx.fillStyle=self.p.nodeBorderColor=='node'?(node['color']||self.p.defaultNodeColor):self.p.defaultNodeBorderColor;ctx.arc(Math.round(node['displayX']),Math.round(node['displayY']),node['displaySize']+self.p.borderSize,0,Math.PI*2,true);ctx.closePath();ctx.fill();ctx.beginPath();ctx.fillStyle=self.p.nodeActiveColor=='node'?(node['color']||self.p.defaultNodeColor):self.p.defaultNodeActiveColor;ctx.arc(Math.round(node['displayX']),Math.round(node['displayY']),node['displaySize'],0,Math.PI*2,true);ctx.closePath();ctx.fill();ctx.fillStyle=self.p.labelActiveColor=='node'?(node['color']||self.p.defaultNodeColor):self.p.defaultLabelActiveColor;ctx.fillText(node['label'],Math.round(node['displayX']+node['displaySize']*1.5),Math.round(node['displayY']+fontSize/2-3));return self;};function isOnScreen(node){if(isNaN(node['x'])||isNaN(node['y'])){throw(new Error('A node\'s coordinate is not a '+'number (id: '+node['id']+')'));}
return!node['hidden']&&(node['displayX']+node['displaySize']>-width/3)&&(node['displayX']-node['displaySize']<width*4/3)&&(node['displayY']+node['displaySize']>-height/3)&&(node['displayY']-node['displaySize']<height*4/3);};function resize(w,h){width=w;height=h;return self;}
this.task_drawLabel=task_drawLabel;this.task_drawEdge=task_drawEdge;this.task_drawNode=task_drawNode;this.drawActiveNode=drawActiveNode;this.drawHoverNode=drawHoverNode;this.isOnScreen=isOnScreen;this.resize=resize;}
function Sigma(root,id){sigma.classes.Cascade.call(this);sigma.classes.EventDispatcher.call(this);var self=this;this.id=id.toString();this.p={auto:true,drawNodes:2,drawEdges:1,drawLabels:2,lastNodes:2,lastEdges:0,lastLabels:2,drawHoverNodes:true,drawActiveNodes:true};this.domRoot=root;try{this.width=this.domRoot.offsetWidth;}catch(err){reload();this.width=$(document).width();}
this.height=this.domRoot.offsetHeight;this.graph=new Graph();this.domElements={};initDOM('edges','canvas');initDOM('nodes','canvas');initDOM('labels','canvas');initDOM('hover','canvas');initDOM('monitor','div');initDOM('mouse','canvas');this.plotter=new Plotter(this.domElements.nodes.getContext('2d'),this.domElements.edges.getContext('2d'),this.domElements.labels.getContext('2d'),this.domElements.hover.getContext('2d'),this.graph,this.width,this.height);this.monitor=new Monitor(this,this.domElements.monitor);this.mousecaptor=new MouseCaptor(this.domElements.mouse,this.id);this.mousecaptor.bind('drag interpolate',function(e){self.draw(self.p.auto?2:self.p.drawNodes,self.p.auto?0:self.p.drawEdges,self.p.auto?2:self.p.drawLabels,true);}).bind('stopdrag stopinterpolate',function(e){self.draw(self.p.auto?2:self.p.drawNodes,self.p.auto?1:self.p.drawEdges,self.p.auto?2:self.p.drawLabels,true);}).bind('mousedown mouseup',function(e){var targeted=self.graph.nodes.filter(function(n){return!!n['hover'];}).map(function(n){return n.id;});self.dispatch(e['type']=='mousedown'?'downgraph':'upgraph');if(targeted.length){self.dispatch(e['type']=='mousedown'?'downnodes':'upnodes',targeted);}}).bind('move',function(){self.domElements.hover.getContext('2d').clearRect(0,0,self.domElements.hover.width,self.domElements.hover.height);drawHover();drawActive();});sigma.chronos.bind('startgenerators',function(){if(sigma.chronos.getGeneratorsIDs().some(function(id){return!!id.match(new RegExp('_ext_'+self.id+'$',''));})){self.draw(self.p.auto?2:self.p.drawNodes,self.p.auto?0:self.p.drawEdges,self.p.auto?2:self.p.drawLabels);}}).bind('stopgenerators',function(){self.draw();});function resize(w,h){var oldW=self.width,oldH=self.height;if(w!=undefined&&h!=undefined){self.width=w;self.height=h;}else{self.width=self.domRoot.offsetWidth;self.height=self.domRoot.offsetHeight;}
if(oldW!=self.width||oldH!=self.height){for(var k in self.domElements){self.domElements[k].setAttribute('width',self.width+'px');self.domElements[k].setAttribute('height',self.height+'px');}
self.plotter.resize(self.width,self.height);self.draw(self.p.lastNodes,self.p.lastEdges,self.p.lastLabels,true);}
return self;};function clearSchedule(){sigma.chronos.removeTask('node_'+self.id,2).removeTask('edge_'+self.id,2).removeTask('label_'+self.id,2).stopTasks();return self;};function initDOM(id,type){self.domElements[id]=document.createElement(type);self.domElements[id].style.position='absolute';self.domElements[id].setAttribute('id','sigma_'+id+'_'+self.id);self.domElements[id].setAttribute('class','sigma_'+id+'_'+type);self.domElements[id].setAttribute('width',self.width+'px');self.domElements[id].setAttribute('height',self.height+'px');self.domRoot.appendChild(self.domElements[id]);return self;};function draw(nodes,edges,labels,safe){if(safe&&sigma.chronos.getGeneratorsIDs().some(function(id){return!!id.match(new RegExp('_ext_'+self.id+'$',''));})){return self;}
var n=(nodes==undefined)?self.p.drawNodes:nodes;var e=(edges==undefined)?self.p.drawEdges:edges;var l=(labels==undefined)?self.p.drawLabels:labels;var params={nodes:n,edges:e,labels:l};self.p.lastNodes=n;self.p.lastEdges=e;self.p.lastLabels=l;clearSchedule();self.graph.rescale(self.width,self.height,n>0,e>0).setBorders();self.mousecaptor.checkBorders(self.graph.borders,self.width,self.height);self.graph.translate(self.mousecaptor.stageX,self.mousecaptor.stageY,self.mousecaptor.ratio,n>0,e>0);self.dispatch('graphscaled');for(var k in self.domElements){if(self.domElements[k].nodeName.toLowerCase()=='canvas'&&(params[k]==undefined||params[k]>=0)){self.domElements[k].getContext('2d').clearRect(0,0,self.domElements[k].width,self.domElements[k].height);}}
self.plotter.currentEdgeIndex=0;self.plotter.currentNodeIndex=0;self.plotter.currentLabelIndex=0;var previous=null;var start=false;if(n){if(n>1){while(self.plotter.task_drawNode()){}}else{sigma.chronos.addTask(self.plotter.task_drawNode,'node_'+self.id,false);start=true;previous='node_'+self.id;}}
if(l){if(l>1){while(self.plotter.task_drawLabel()){}}else{if(previous){sigma.chronos.queueTask(self.plotter.task_drawLabel,'label_'+self.id,previous);}else{sigma.chronos.addTask(self.plotter.task_drawLabel,'label_'+self.id,false);}
start=true;previous='label_'+self.id;}}
if(e){if(e>1){while(self.plotter.task_drawEdge()){}}else{if(previous){sigma.chronos.queueTask(self.plotter.task_drawEdge,'edge_'+self.id,previous);}else{sigma.chronos.addTask(self.plotter.task_drawEdge,'edge_'+self.id,false);}
start=true;previous='edge_'+self.id;}}
self.dispatch('draw');self.refresh();start&&sigma.chronos.runTasks();return self;};function refresh(){self.domElements.hover.getContext('2d').clearRect(0,0,self.domElements.hover.width,self.domElements.hover.height);drawHover();drawActive();return self;}
function drawHover(){if(self.p.drawHoverNodes){self.graph.checkHover(self.mousecaptor.mouseX,self.mousecaptor.mouseY);self.graph.nodes.forEach(function(node){if(node.hover&&!node.active){self.plotter.drawHoverNode(node);}});}
return self;}
function drawActive(){if(self.p.drawActiveNodes){self.graph.nodes.forEach(function(node){if(node.active){self.plotter.drawActiveNode(node);}});}
return self;}
for(var i=0;i<local.plugins.length;i++){local.plugins[i](this);}
this.draw=draw;this.resize=resize;this.refresh=refresh;this.drawHover=drawHover;this.drawActive=drawActive;this.clearSchedule=clearSchedule;window.addEventListener('resize',function(){self.resize();});}
function SigmaPublic(sigmaInstance){var s=sigmaInstance;var self=this;sigma.classes.EventDispatcher.call(this);this._core=sigmaInstance;this.kill=function(){};this.getID=function(){return s.id;};this.configProperties=function(a1,a2){var res=s.config(a1,a2);return res==s?self:res;};this.drawingProperties=function(a1,a2){var res=s.plotter.config(a1,a2);return res==s.plotter?self:res;};this.mouseProperties=function(a1,a2){var res=s.mousecaptor.config(a1,a2);return res==s.mousecaptor?self:res;};this.graphProperties=function(a1,a2){var res=s.graph.config(a1,a2);return res==s.graph?self:res;};this.getMouse=function(){return{mouseX:s.mousecaptor.mouseX,mouseY:s.mousecaptor.mouseY,down:s.mousecaptor.isMouseDown};};this.position=function(stageX,stageY,ratio){if(arguments.length==0){return{stageX:s.mousecaptor.stageX,stageY:s.mousecaptor.stageY,ratio:s.mousecaptor.ratio};}else{s.mousecaptor.stageX=stageX!=undefined?stageX:s.mousecaptor.stageX;s.mousecaptor.stageY=stageY!=undefined?stageY:s.mousecaptor.stageY;s.mousecaptor.ratio=ratio!=undefined?ratio:s.mousecaptor.ratio;return self;}};this.goTo=function(stageX,stageY,ratio){s.mousecaptor.interpolate(stageX,stageY,ratio);return self;};this.zoomTo=function(x,y,ratio){ratio=Math.min(Math.max(s.mousecaptor.config('minRatio'),ratio),s.mousecaptor.config('maxRatio'));if(ratio==s.mousecaptor.ratio){s.mousecaptor.interpolate(x-s.width/2+s.mousecaptor.stageX,y-s.height/2+s.mousecaptor.stageY);}else{s.mousecaptor.interpolate((ratio*x-s.mousecaptor.ratio*s.width/2)/(ratio-s.mousecaptor.ratio),(ratio*y-s.mousecaptor.ratio*s.height/2)/(ratio-s.mousecaptor.ratio),ratio);}
return self;};this.resize=function(w,h){s.resize(w,h);return self;};this.draw=function(nodes,edges,labels,safe){s.draw(nodes,edges,labels,safe);return self;};this.refresh=function(){s.refresh();return self;};this.addGenerator=function(id,task,condition){sigma.chronos.addGenerator(id+'_ext_'+s.id,task,condition);return self;};this.removeGenerator=function(id){sigma.chronos.removeGenerator(id+'_ext_'+s.id);return self;};this.addNode=function(id,params){s.graph.addNode(id,params);return self;};this.addEdge=function(id,source,target,params){s.graph.addEdge(id,source,target,params);return self;}
this.dropNode=function(v){s.graph.dropNode(v);return self;};this.dropEdge=function(v){s.graph.dropEdge(v);return self;};this.pushGraph=function(object,safe){object.nodes&&object.nodes.forEach(function(node){node['id']&&(!safe||!s.graph.nodesIndex[node['id']])&&self.addNode(node['id'],node);});var isEdgeValid;object.edges&&object.edges.forEach(function(edge){validID=edge['source']&&edge['target']&&edge['id'];validID&&(!safe||!s.graph.edgesIndex[edge['id']])&&self.addEdge(edge['id'],edge['source'],edge['target'],edge);});return self;};this.emptyGraph=function(){s.graph.empty();return self;};this.getNodesCount=function(){return s.graph.nodes.length;};this.getEdgesCount=function(){return s.graph.edges.length;};this.iterNodes=function(fun,ids){s.graph.iterNodes(fun,ids);return self;};this.iterEdges=function(fun,ids){s.graph.iterEdges(fun,ids);return self;};this.getNodes=function(ids){return s.graph.getNodes(ids);};this.getEdges=function(ids){return s.graph.getEdges(ids);};this.activateMonitoring=function(){return s.monitor.activate();};this.desactivateMonitoring=function(){return s.monitor.desactivate();};s.bind('downnodes upnodes downgraph upgraph',function(e){self.dispatch(e.type,e.content);});s.graph.bind('overnodes outnodes',function(e){self.dispatch(e.type,e.content);});}
sigma.addPlugin=function(pluginName,caller,launcher){SigmaPublic.prototype[pluginName]=caller;local.plugins.push(launcher);};sigma.chronos=new(function(){sigma.classes.EventDispatcher.call(this);var self=this;var isRunning=false;var fpsReq=80;var lastFPS=0;var framesCount=0;var frameTime=1000/fpsReq;var correctedFrameTime=frameTime;var effectiveTime=0;var currentTime=0;var startTime=0;var delay=0;var generators={};var tasks=[];var queuedTasks=[];var taskIndex=0;function insertFrame(callback){window.setTimeout(callback,0);return self;}
function frameInserter(){self.dispatch('frameinserted');while(isRunning&&tasks.length&&routine()){}
if(!isRunning||!tasks.length){stopTasks();}else{startTime=(new Date()).getTime();framesCount++;delay=effectiveTime-frameTime;correctedFrameTime=frameTime-delay;self.dispatch('insertframe');insertFrame(frameInserter);}};function routine(){taskIndex=taskIndex%tasks.length;if(!tasks[taskIndex].task()){var n=tasks[taskIndex].taskName;queuedTasks=queuedTasks.filter(function(e){(e.taskParent==n)&&tasks.push({taskName:e.taskName,task:e.task});return e.taskParent!=n;});self.dispatch('killed',tasks.splice(taskIndex--,1)[0]);}
taskIndex++;effectiveTime=(new Date()).getTime()-startTime;return effectiveTime<=correctedFrameTime;};function runTasks(){isRunning=true;taskIndex=0;framesCount=0;startTime=(new Date()).getTime();currentTime=startTime;self.dispatch('start');self.dispatch('insertframe');insertFrame(frameInserter);return self;};function stopTasks(){self.dispatch('stop');isRunning=false;return self;};function addTask(task,name,autostart){if(typeof task!='function'){throw new Error('Task "'+name+'" is not a function');}
tasks.push({taskName:name,task:task});isRunning=!!(isRunning||(autostart&&runTasks())||true);return self;};function queueTask(task,name,parent){if(typeof task!='function'){throw new Error('Task "'+name+'" is not a function');}
if(!tasks.concat(queuedTasks).some(function(e){return e.taskName==parent;})){throw new Error('Parent task "'+parent+'" of "'+name+'" is not attached.');}
queuedTasks.push({taskParent:parent,taskName:name,task:task});return self;};function removeTask(v,queueStatus){if(v==undefined){tasks=[];if(queueStatus==1){queuedTasks=[];}else if(queueStatus==2){tasks=queuedTasks;queuedTasks=[];}
stopTasks();}else{var n=(typeof v=='string')?v:'';tasks=tasks.filter(function(e){if((typeof v=='string')?e.taskName==v:e.task==v){n=e.taskName;return false;}
return true;});if(queueStatus>0){queuedTasks=queuedTasks.filter(function(e){if(queueStatus==1&&e.taskParent==n){tasks.push(e);}
return e.taskParent!=n;});}}
isRunning=!!(!tasks.length||(stopTasks()&&false));return self;};function addGenerator(id,task,condition){if(generators[id]!=undefined){return self;}
generators[id]={task:task,condition:condition};getGeneratorsCount(true)==0&&startGenerators();return self;};function removeGenerator(id){if(generators[id]){generators[id].on=false;generators[id].del=true;}
return self;};function getGeneratorsCount(running){return running?Object.keys(generators).filter(function(id){return!!generators[id].on;}).length:Object.keys(generators).length;};function getGeneratorsIDs(){return Object.keys(generators);}
function startGenerators(){if(!Object.keys(generators).length){self.dispatch('stopgenerators');}else{self.dispatch('startgenerators');self.unbind('killed',onTaskEnded);insertFrame(function(){for(var k in generators){generators[k].on=true;addTask(generators[k].task,k,false);}});self.bind('killed',onTaskEnded).runTasks();}
return self;};function onTaskEnded(e){if(generators[e['content'].taskName]!=undefined){if(generators[e['content'].taskName].del||!generators[e['content'].taskName].condition()){delete generators[e['content'].taskName];}else{generators[e['content'].taskName].on=false;}
if(getGeneratorsCount(true)==0){startGenerators();}}};function frequency(v){if(v!=undefined){fpsReq=Math.abs(1*v);frameTime=1000/fpsReq;framesCount=0;return self;}else{return fpsReq;}};function getFPS(){if(isRunning){lastFPS=Math.round(framesCount/((new Date()).getTime()-currentTime)*10000)/10;}
return lastFPS;};function getTasksCount(){return tasks.length;}
function getQueuedTasksCount(){return queuedTasks.length;}
function getExecutionTime(){return startTime-currentTime;}
this.frequency=frequency;this.runTasks=runTasks;this.stopTasks=stopTasks;this.insertFrame=insertFrame;this.addTask=addTask;this.queueTask=queueTask;this.removeTask=removeTask;this.addGenerator=addGenerator;this.removeGenerator=removeGenerator;this.startGenerators=startGenerators;this.getGeneratorsIDs=getGeneratorsIDs;this.getFPS=getFPS;this.getTasksCount=getTasksCount;this.getQueuedTasksCount=getQueuedTasksCount;this.getExecutionTime=getExecutionTime;return this;})();sigma.debugMode=0;sigma.log=function(){if(sigma.debugMode==1){for(var k in arguments){console.log(arguments[k]);}}else if(sigma.debugMode>1){for(var k in arguments){throw new Error(arguments[k]);}}
return sigma;};sigma.easing={linear:{},quadratic:{}};sigma.easing.linear.easenone=function(k){return k;};sigma.easing.quadratic.easein=function(k){return k*k;};sigma.easing.quadratic.easeout=function(k){return-k*(k-2);};sigma.easing.quadratic.easeinout=function(k){if((k*=2)<1)return 0.5*k*k;return-0.5*(--k*(k-2)-1);};sigma.tools.drawRoundRect=function(ctx,x,y,w,h,ellipse,corners){var e=ellipse?ellipse:0;var c=corners?corners:[];c=((typeof c)=='string')?c.split(' '):c;var tl=e&&(c.indexOf('topleft')>=0||c.indexOf('top')>=0||c.indexOf('left')>=0);var tr=e&&(c.indexOf('topright')>=0||c.indexOf('top')>=0||c.indexOf('right')>=0);var bl=e&&(c.indexOf('bottomleft')>=0||c.indexOf('bottom')>=0||c.indexOf('left')>=0);var br=e&&(c.indexOf('bottomright')>=0||c.indexOf('bottom')>=0||c.indexOf('right')>=0);ctx.moveTo(x,y+e);if(tl){ctx.arcTo(x,y,x+e,y,e);}else{ctx.lineTo(x,y);}
if(tr){ctx.lineTo(x+w-e,y);ctx.arcTo(x+w,y,x+w,y+e,e);}else{ctx.lineTo(x+w,y);}
if(br){ctx.lineTo(x+w,y+h-e);ctx.arcTo(x+w,y+h,x+w-e,y+h,e);}else{ctx.lineTo(x+w,y+h);}
if(bl){ctx.lineTo(x+e,y+h);ctx.arcTo(x,y+h,x,y+h-e,e);}else{ctx.lineTo(x,y+h);}
ctx.lineTo(x,y+e);};sigma.tools.getRGB=function(s,asArray){s=s.toString();var res={'r':0,'g':0,'b':0};if(s.length>=3){if(s.charAt(0)=='#'){var l=s.length-1;if(l==6){res={'r':parseInt(s.charAt(1)+s.charAt(2),16),'g':parseInt(s.charAt(3)+s.charAt(4),16),'b':parseInt(s.charAt(5)+s.charAt(5),16)};}else if(l==3){res={'r':parseInt(s.charAt(1)+s.charAt(1),16),'g':parseInt(s.charAt(2)+s.charAt(2),16),'b':parseInt(s.charAt(3)+s.charAt(3),16)};}}}
if(asArray){res=[res['r'],res['g'],res['b']];}
return res;};sigma.tools.rgbToHex=function(R,G,B){return sigma.tools.toHex(R)+sigma.tools.toHex(G)+sigma.tools.toHex(B);};sigma.tools.toHex=function(n){n=parseInt(n,10);if(isNaN(n)){return'00';}
n=Math.max(0,Math.min(n,255));return'0123456789ABCDEF'.charAt((n-n%16)/16)+'0123456789ABCDEF'.charAt(n%16);};sigma.publicPrototype=SigmaPublic.prototype;})();